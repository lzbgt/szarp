#!/bin/sh
### BEGIN INIT INFO
# Provides:          SZARP
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts SZARP deamons.
# Description:       Starts SZARP parcook server/terminal daemons (depending on SZARP system configuration).
### END INIT INFO
# $Id: parstart_TEMPLATE 6713 2009-05-02 12:39:34Z reksio $
. /lib/lsb/init-functions

# load locales for use at system startup, e.g. for borutadmn
if [ -r /etc/default/locale ]; then
	. /etc/default/locale
	export LANG
fi

# Check for szarp config file.
if [ -f /etc/szarp/parstart.cfg ]; then
       	. /etc/szarp/parstart.cfg
else
	log_failure_msg "Configuration file /etc/szarp/parstart.cfg is missing"
	exit 0
fi

# Check for SZARP dir
[ -d __INSTALL_DIR__/ ] || {
	log_failure_msg "No such directory: __INSTALL_DIR__/"
	exit 1
}

EXITCODE=0
DAEMON_ERROR=""

szlog() {
	log_daemon_msg "Starting SZARP" $DAEMON
}

stlog() {
	log_daemon_msg "Stopping SZARP" $DAEMON
}

setulimit() {
	if [ $1 ]; then
	    ulimit -n $1
	fi
}

do_start () {
	# we don't want e.g. the stop exitcode to mess with starting sequence
	# so EXITCODE has to be cleaned
	EXITCODE=0
	DAEMON_ERROR=""

	setulimit $NOFILE_LIMIT
	# enable core dump
	ulimit -c unlimited

	if [ x$PARHUB = x1 ]; then
			DAEMON='parhub'
			szlog
			python /opt/szarp/lib/python/parhub.py start
			worklog $?
	fi

	if [ x$IKS_SERVER = x1 ] ; then
	    DAEMON=/opt/szarp/bin/iks-server
	    szlog
	    start_daemon $DAEMON
		worklog $?
	fi

	if [ x$PROBES_SERVER = x1 ]; then
			DAEMON=__INSTALL_DIR__/lib/python/probes_server.tac
			szlog
			twistd -y $DAEMON --logfile /opt/szarp/logs/prober.log --pidfile /var/run/probes_server.pid
			worklog $?
	fi

	if [ x$PSERVER_LITE = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/pserver-lite
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$MEANER4 = x1 ]; then
			DAEMON='meaner4'
			szlog
			python /opt/szarp/lib/python/meaner4/meaner4dmn.py start
			worklog $?
	fi

	if [ x$PARCOOK = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/parcook
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$MEANER3 = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/meaner3
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$PARAMD = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/paramd
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$XSLTD = x1 ]; then
			log_daemon_msg "Updating xsltd link"
			ln -sf "__INSTALL_DIR__/$HOST" /etc/szarp/default
			worklog $?
	fi

	if [ x$SENDER = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/sender
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$SSS = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/sss
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$STAMPD = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/stampd
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$SSCONF = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/ssconf.py
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$PROBER = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/prober
			szlog
			start_daemon $DAEMON
			worklog $?
	fi

	if [ x$REMARKS_SERVER = x1 ]; then
			DAEMON=__INSTALL_DIR__/bin/remarks_server.py
			szlog
			twistd -y $DAEMON --pidfile /var/run/remarks_server.pid -l __INSTALL_DIR__/logs/remarks_server.log
			worklog $?
	fi

	if [ x$EXITCODE != x0 ]; then
		echo "One or more daemon failed to run:" 1>&2
		log_failure_msg "${DAEMON_ERROR}"
		echo "Stopping all daemons!\n" 1>&2
		do_stop
	fi
}

do_stop() {
	if [ x$SSS = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/sss
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$IKS_SERVER = x1 ] ; then
	    DAEMON=/opt/szarp/bin/iks-server
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    log_end_msg $?
	fi

	if [ x$PROBER = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/prober
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$PROBES_SERVER = x1 ]; then
	    DAEMON=__INSTALL_DIR__/lib/python/probes_server.tac
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/probes_server.pid
	    worklog $?
	fi

	if [ x$PSERVER_LITE = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/pserver-lite
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$STAMPD = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/stampd
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$SSCONF = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/ssconf.py
	    stlog
	    # we cannot use --exec here because ssconf is run by python interpter
	    PIDFILE=/var/run/ssconf.pid
	    pidof -x $DAEMON > $PIDFILE
	    /sbin/start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
	    worklog $?
	fi

	if [ x$SENDER = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/sender
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$MEANER3 = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/meaner3
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
    	    # sometimes meaner3 needs more time
    	    sleep 1
	    worklog $?
	fi

	if [ x$PARAMD = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/paramd
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$PARCOOK = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/parcook
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --exec $DAEMON
	    worklog $?
	fi

	if [ x$REMARKS_SERVER = x1 ]; then
	    DAEMON=__INSTALL_DIR__/bin/remarks_server.py
	    stlog
	    /sbin/start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/remarks_server.pid
	    worklog $?
	fi

	if [ x$MEANER4 = x1 ]; then
	    DAEMON='meaner4'
	    stlog
	    python /opt/szarp/lib/python/meaner4/meaner4dmn.py stop
	    worklog $?
	fi

	if [ x$PARHUB = x1 ]; then
	    DAEMON='parhub'
	    stlog
	    python /opt/szarp/lib/python/parhub.py stop
	    worklog $?
	fi

	echo -n "(SZARP) Oczekiwanie"
	for i in 1 2 3 ; do {
		echo -n "."
		sleep 1
	}; done

	log_daemon_msg "Cleaning IPC resources"
	__INSTALL_DIR__/bin/ipcclean
	worklog $?
}

worklog() {
	log_end_msg $1
	if [ $1 -ne "0" ]; then
		 EXITCODE=$1
		 DAEMON_ERROR="$DAEMON_ERROR $DAEMON"
	fi
}

case "$1" in
  start)
		do_start
	;;

  stop)
		# stop shouldn't use i2smo, it causes weird problems with:
		# - package upgrade
		# - package reconfiguration
		do_stop
	;;

  restart|reload)
		# isn't called on systemd
		# systemd calls stop (if it thinks it is necessary), then start
		do_stop
		do_start
	;;

  status)
		echo "SZARP programs run: "
		ps axw | grep -v 'grep' | grep "__INSTALL_DIR__/bin" \
			| cut -d ':' -f '2-' | cut -b '4-'
	;;

  *)
	echo "Usage: parstart {start|stop|forcestop|restart|reload|status}"
	exit 1
	;;
esac

exit $EXITCODE
